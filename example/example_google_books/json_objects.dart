// Generated by the 'yaml2podo' tool, https://pub.dev/packages/marshalling

import 'package:marshalling/json_serializer.dart';

final json = JsonSerializer()
  ..addType(() => AccessInfo())
  ..addType(() => BookInfo())
  ..addType(() => BooksResponse())
  ..addType(() => Dimension())
  ..addType(() => DownloadAccess())
  ..addType(() => ImageLinks())
  ..addType(() => IndustryIdentifier())
  ..addType(() => Price())
  ..addType(() => SaleInfo())
  ..addType(() => SearchInfo())
  ..addType(() => UserInfo())
  ..addType(() => Volume())
  ..addType(() => VolumeInfo())
  ..addIterableType<List<IndustryIdentifier>, IndustryIdentifier>(() => <IndustryIdentifier>[])
  ..addIterableType<List<Dimension>, Dimension>(() => <Dimension>[])
  ..addIterableType<List<String>, String>(() => <String>[])
  ..addIterableType<List<Volume>, Volume>(() => <Volume>[])
  ..addAccessor('accessInfo', (o) => o.accessInfo, (o, v) => o.accessInfo = v)
  ..addAccessor('accessViewStatus', (o) => o.accessViewStatus, (o, v) => o.accessViewStatus = v)
  ..addAccessor('acsTokenLink', (o) => o.acsTokenLink, (o, v) => o.acsTokenLink = v)
  ..addAccessor('amount', (o) => o.amount, (o, v) => o.amount = v)
  ..addAccessor('authors', (o) => o.authors, (o, v) => o.authors = v)
  ..addAccessor('averageRating', (o) => o.averageRating, (o, v) => o.averageRating = v)
  ..addAccessor('buyLink', (o) => o.buyLink, (o, v) => o.buyLink = v)
  ..addAccessor('canonicalVolumeLink', (o) => o.canonicalVolumeLink, (o, v) => o.canonicalVolumeLink = v)
  ..addAccessor('categories', (o) => o.categories, (o, v) => o.categories = v)
  ..addAccessor('contentVersion', (o) => o.contentVersion, (o, v) => o.contentVersion = v)
  ..addAccessor('country', (o) => o.country, (o, v) => o.country = v)
  ..addAccessor('currencyCode', (o) => o.currencyCode, (o, v) => o.currencyCode = v)
  ..addAccessor('description', (o) => o.description, (o, v) => o.description = v)
  ..addAccessor('deviceAllowed', (o) => o.deviceAllowed, (o, v) => o.deviceAllowed = v)
  ..addAccessor('dimensions', (o) => o.dimensions, (o, v) => o.dimensions = v)
  ..addAccessor('downloadAccess', (o) => o.downloadAccess, (o, v) => o.downloadAccess = v)
  ..addAccessor('downloadLink', (o) => o.downloadLink, (o, v) => o.downloadLink = v)
  ..addAccessor('downloadsAcquired', (o) => o.downloadsAcquired, (o, v) => o.downloadsAcquired = v)
  ..addAccessor('embeddable', (o) => o.embeddable, (o, v) => o.embeddable = v)
  ..addAccessor('epub', (o) => o.epub, (o, v) => o.epub = v)
  ..addAccessor('etag', (o) => o.etag, (o, v) => o.etag = v)
  ..addAccessor('extraLarge', (o) => o.extraLarge, (o, v) => o.extraLarge = v)
  ..addAccessor('height', (o) => o.height, (o, v) => o.height = v)
  ..addAccessor('id', (o) => o.id, (o, v) => o.id = v)
  ..addAccessor('identifier', (o) => o.identifier, (o, v) => o.identifier = v)
  ..addAccessor('imageLinks', (o) => o.imageLinks, (o, v) => o.imageLinks = v)
  ..addAccessor('industryIdentifiers', (o) => o.industryIdentifiers, (o, v) => o.industryIdentifiers = v)
  ..addAccessor('infoLink', (o) => o.infoLink, (o, v) => o.infoLink = v)
  ..addAccessor('isAvailable', (o) => o.isAvailable, (o, v) => o.isAvailable = v)
  ..addAccessor('isEbook', (o) => o.isEbook, (o, v) => o.isEbook = v)
  ..addAccessor('isPreordered', (o) => o.isPreordered, (o, v) => o.isPreordered = v)
  ..addAccessor('isPurchased', (o) => o.isPurchased, (o, v) => o.isPurchased = v)
  ..addAccessor('items', (o) => o.items, (o, v) => o.items = v)
  ..addAccessor('justAcquired', (o) => o.justAcquired, (o, v) => o.justAcquired = v)
  ..addAccessor('kind', (o) => o.kind, (o, v) => o.kind = v)
  ..addAccessor('language', (o) => o.language, (o, v) => o.language = v)
  ..addAccessor('large', (o) => o.large, (o, v) => o.large = v)
  ..addAccessor('listPrice', (o) => o.listPrice, (o, v) => o.listPrice = v)
  ..addAccessor('mainCategory', (o) => o.mainCategory, (o, v) => o.mainCategory = v)
  ..addAccessor('maxDownloadDevices', (o) => o.maxDownloadDevices, (o, v) => o.maxDownloadDevices = v)
  ..addAccessor('medium', (o) => o.medium, (o, v) => o.medium = v)
  ..addAccessor('message', (o) => o.message, (o, v) => o.message = v)
  ..addAccessor('nonce', (o) => o.nonce, (o, v) => o.nonce = v)
  ..addAccessor('onSaleDate', (o) => o.onSaleDate, (o, v) => o.onSaleDate = v)
  ..addAccessor('pageCount', (o) => o.pageCount, (o, v) => o.pageCount = v)
  ..addAccessor('pdf', (o) => o.pdf, (o, v) => o.pdf = v)
  ..addAccessor('previewLink', (o) => o.previewLink, (o, v) => o.previewLink = v)
  ..addAccessor('printType', (o) => o.printType, (o, v) => o.printType = v)
  ..addAccessor('publicDomain', (o) => o.publicDomain, (o, v) => o.publicDomain = v)
  ..addAccessor('publishedDate', (o) => o.publishedDate, (o, v) => o.publishedDate = v)
  ..addAccessor('publisher', (o) => o.publisher, (o, v) => o.publisher = v)
  ..addAccessor('ratingsCount', (o) => o.ratingsCount, (o, v) => o.ratingsCount = v)
  ..addAccessor('reasonCode', (o) => o.reasonCode, (o, v) => o.reasonCode = v)
  ..addAccessor('restricted', (o) => o.restricted, (o, v) => o.restricted = v)
  ..addAccessor('retailPrice', (o) => o.retailPrice, (o, v) => o.retailPrice = v)
  ..addAccessor('saleInfo', (o) => o.saleInfo, (o, v) => o.saleInfo = v)
  ..addAccessor('saleability', (o) => o.saleability, (o, v) => o.saleability = v)
  ..addAccessor('searchInfo', (o) => o.searchInfo, (o, v) => o.searchInfo = v)
  ..addAccessor('selfLink', (o) => o.selfLink, (o, v) => o.selfLink = v)
  ..addAccessor('signature', (o) => o.signature, (o, v) => o.signature = v)
  ..addAccessor('small', (o) => o.small, (o, v) => o.small = v)
  ..addAccessor('smallThumbnail', (o) => o.smallThumbnail, (o, v) => o.smallThumbnail = v)
  ..addAccessor('source', (o) => o.source, (o, v) => o.source = v)
  ..addAccessor('subtitle', (o) => o.subtitle, (o, v) => o.subtitle = v)
  ..addAccessor('textSnippet', (o) => o.textSnippet, (o, v) => o.textSnippet = v)
  ..addAccessor('textToSpeechPermission', (o) => o.textToSpeechPermission, (o, v) => o.textToSpeechPermission = v)
  ..addAccessor('thickness', (o) => o.thickness, (o, v) => o.thickness = v)
  ..addAccessor('thumbnail', (o) => o.thumbnail, (o, v) => o.thumbnail = v)
  ..addAccessor('title', (o) => o.title, (o, v) => o.title = v)
  ..addAccessor('totalItems', (o) => o.totalItems, (o, v) => o.totalItems = v)
  ..addAccessor('type', (o) => o.type, (o, v) => o.type = v)
  ..addAccessor('updated', (o) => o.updated, (o, v) => o.updated = v)
  ..addAccessor('userInfo', (o) => o.userInfo, (o, v) => o.userInfo = v)
  ..addAccessor('viewability', (o) => o.viewability, (o, v) => o.viewability = v)
  ..addAccessor('volumeId', (o) => o.volumeId, (o, v) => o.volumeId = v)
  ..addAccessor('volumeInfo', (o) => o.volumeInfo, (o, v) => o.volumeInfo = v)
  ..addAccessor('webReaderLink', (o) => o.webReaderLink, (o, v) => o.webReaderLink = v)
  ..addAccessor('width', (o) => o.width, (o, v) => o.width = v)
  ..addProperty<AccessInfo, String>('country')
  ..addProperty<AccessInfo, String>('textToSpeechPermission')
  ..addProperty<AccessInfo, String>('webReaderLink')
  ..addProperty<AccessInfo, BookInfo>('pdf')
  ..addProperty<AccessInfo, DownloadAccess>('downloadAccess')
  ..addProperty<AccessInfo, bool>('publicDomain')
  ..addProperty<AccessInfo, String>('accessViewStatus')
  ..addProperty<AccessInfo, String>('viewability')
  ..addProperty<AccessInfo, BookInfo>('epub')
  ..addProperty<AccessInfo, bool>('embeddable')
  ..addProperty<BookInfo, bool>('isAvailable')
  ..addProperty<BookInfo, String>('acsTokenLink')
  ..addProperty<BookInfo, String>('downloadLink')
  ..addProperty<BooksResponse, String>('kind')
  ..addProperty<BooksResponse, int>('totalItems')
  ..addProperty<BooksResponse, List<Volume>>('items')
  ..addProperty<Dimension, String>('thickness')
  ..addProperty<Dimension, String>('width')
  ..addProperty<Dimension, String>('height')
  ..addProperty<DownloadAccess, String>('source')
  ..addProperty<DownloadAccess, String>('volumeId')
  ..addProperty<DownloadAccess, int>('maxDownloadDevices')
  ..addProperty<DownloadAccess, String>('reasonCode')
  ..addProperty<DownloadAccess, String>('message')
  ..addProperty<DownloadAccess, bool>('restricted')
  ..addProperty<DownloadAccess, String>('kind')
  ..addProperty<DownloadAccess, bool>('deviceAllowed')
  ..addProperty<DownloadAccess, int>('downloadsAcquired')
  ..addProperty<DownloadAccess, String>('signature')
  ..addProperty<DownloadAccess, bool>('justAcquired')
  ..addProperty<DownloadAccess, String>('nonce')
  ..addProperty<ImageLinks, String>('large')
  ..addProperty<ImageLinks, String>('small')
  ..addProperty<ImageLinks, String>('thumbnail')
  ..addProperty<ImageLinks, String>('medium')
  ..addProperty<ImageLinks, String>('smallThumbnail')
  ..addProperty<ImageLinks, String>('extraLarge')
  ..addProperty<IndustryIdentifier, String>('identifier')
  ..addProperty<IndustryIdentifier, String>('type')
  ..addProperty<Price, String>('currencyCode')
  ..addProperty<Price, double>('amount')
  ..addProperty<SaleInfo, String>('country')
  ..addProperty<SaleInfo, DateTime>('onSaleDate')
  ..addProperty<SaleInfo, String>('buyLink')
  ..addProperty<SaleInfo, Price>('listPrice')
  ..addProperty<SaleInfo, String>('saleability')
  ..addProperty<SaleInfo, Price>('retailPrice')
  ..addProperty<SaleInfo, bool>('isEbook')
  ..addProperty<SearchInfo, String>('textSnippet')
  ..addProperty<UserInfo, bool>('isPurchased')
  ..addProperty<UserInfo, DateTime>('updated')
  ..addProperty<UserInfo, bool>('isPreordered')
  ..addProperty<Volume, VolumeInfo>('volumeInfo')
  ..addProperty<Volume, SearchInfo>('searchInfo')
  ..addProperty<Volume, SaleInfo>('saleInfo')
  ..addProperty<Volume, String>('etag')
  ..addProperty<Volume, AccessInfo>('accessInfo')
  ..addProperty<Volume, String>('kind')
  ..addProperty<Volume, String>('selfLink')
  ..addProperty<Volume, String>('id')
  ..addProperty<Volume, UserInfo>('userInfo')
  ..addProperty<VolumeInfo, List<IndustryIdentifier>>('industryIdentifiers')
  ..addProperty<VolumeInfo, List<Dimension>>('dimensions')
  ..addProperty<VolumeInfo, String>('contentVersion')
  ..addProperty<VolumeInfo, String>('publisher')
  ..addProperty<VolumeInfo, String>('canonicalVolumeLink')
  ..addProperty<VolumeInfo, List<String>>('authors')
  ..addProperty<VolumeInfo, ImageLinks>('imageLinks')
  ..addProperty<VolumeInfo, String>('language')
  ..addProperty<VolumeInfo, String>('infoLink')
  ..addProperty<VolumeInfo, int>('ratingsCount')
  ..addProperty<VolumeInfo, String>('publishedDate')
  ..addProperty<VolumeInfo, String>('previewLink')
  ..addProperty<VolumeInfo, List<String>>('categories')
  ..addProperty<VolumeInfo, String>('description')
  ..addProperty<VolumeInfo, String>('printType')
  ..addProperty<VolumeInfo, String>('subtitle')
  ..addProperty<VolumeInfo, String>('title')
  ..addProperty<VolumeInfo, int>('pageCount')
  ..addProperty<VolumeInfo, String>('mainCategory')
  ..addProperty<VolumeInfo, double>('averageRating');

class AccessInfo {
  String country;
  String textToSpeechPermission;
  String webReaderLink;
  BookInfo pdf;
  DownloadAccess downloadAccess;
  bool publicDomain;
  String accessViewStatus;
  String viewability;
  BookInfo epub;
  bool embeddable;

  AccessInfo();

  factory AccessInfo.fromJson(Map map) {
    return json.unmarshal<AccessInfo>(map);
  }

  Map<String, dynamic> toJson() {
    return json.marshal(this) as Map<String, dynamic>;
  }
}

class BookInfo {
  bool isAvailable;
  String acsTokenLink;
  String downloadLink;

  BookInfo();

  factory BookInfo.fromJson(Map map) {
    return json.unmarshal<BookInfo>(map);
  }

  Map<String, dynamic> toJson() {
    return json.marshal(this) as Map<String, dynamic>;
  }
}

class BooksResponse {
  String kind;
  int totalItems;
  List<Volume> items;

  BooksResponse();

  factory BooksResponse.fromJson(Map map) {
    return json.unmarshal<BooksResponse>(map);
  }

  Map<String, dynamic> toJson() {
    return json.marshal(this) as Map<String, dynamic>;
  }
}

class Dimension {
  String thickness;
  String width;
  String height;

  Dimension();

  factory Dimension.fromJson(Map map) {
    return json.unmarshal<Dimension>(map);
  }

  Map<String, dynamic> toJson() {
    return json.marshal(this) as Map<String, dynamic>;
  }
}

class DownloadAccess {
  String source;
  String volumeId;
  int maxDownloadDevices;
  String reasonCode;
  String message;
  bool restricted;
  String kind;
  bool deviceAllowed;
  int downloadsAcquired;
  String signature;
  bool justAcquired;
  String nonce;

  DownloadAccess();

  factory DownloadAccess.fromJson(Map map) {
    return json.unmarshal<DownloadAccess>(map);
  }

  Map<String, dynamic> toJson() {
    return json.marshal(this) as Map<String, dynamic>;
  }
}

class ImageLinks {
  String large;
  String small;
  String thumbnail;
  String medium;
  String smallThumbnail;
  String extraLarge;

  ImageLinks();

  factory ImageLinks.fromJson(Map map) {
    return json.unmarshal<ImageLinks>(map);
  }

  Map<String, dynamic> toJson() {
    return json.marshal(this) as Map<String, dynamic>;
  }
}

class IndustryIdentifier {
  String identifier;
  String type;

  IndustryIdentifier();

  factory IndustryIdentifier.fromJson(Map map) {
    return json.unmarshal<IndustryIdentifier>(map);
  }

  Map<String, dynamic> toJson() {
    return json.marshal(this) as Map<String, dynamic>;
  }
}

class Price {
  String currencyCode;
  double amount;

  Price();

  factory Price.fromJson(Map map) {
    return json.unmarshal<Price>(map);
  }

  Map<String, dynamic> toJson() {
    return json.marshal(this) as Map<String, dynamic>;
  }
}

class SaleInfo {
  String country;
  DateTime onSaleDate;
  String buyLink;
  Price listPrice;
  String saleability;
  Price retailPrice;
  bool isEbook;

  SaleInfo();

  factory SaleInfo.fromJson(Map map) {
    return json.unmarshal<SaleInfo>(map);
  }

  Map<String, dynamic> toJson() {
    return json.marshal(this) as Map<String, dynamic>;
  }
}

class SearchInfo {
  String textSnippet;

  SearchInfo();

  factory SearchInfo.fromJson(Map map) {
    return json.unmarshal<SearchInfo>(map);
  }

  Map<String, dynamic> toJson() {
    return json.marshal(this) as Map<String, dynamic>;
  }
}

class UserInfo {
  bool isPurchased;
  DateTime updated;
  bool isPreordered;

  UserInfo();

  factory UserInfo.fromJson(Map map) {
    return json.unmarshal<UserInfo>(map);
  }

  Map<String, dynamic> toJson() {
    return json.marshal(this) as Map<String, dynamic>;
  }
}

class Volume {
  VolumeInfo volumeInfo;
  SearchInfo searchInfo;
  SaleInfo saleInfo;
  String etag;
  AccessInfo accessInfo;
  String kind;
  String selfLink;
  String id;
  UserInfo userInfo;

  Volume();

  factory Volume.fromJson(Map map) {
    return json.unmarshal<Volume>(map);
  }

  Map<String, dynamic> toJson() {
    return json.marshal(this) as Map<String, dynamic>;
  }
}

class VolumeInfo {
  List<IndustryIdentifier> industryIdentifiers;
  List<Dimension> dimensions;
  String contentVersion;
  String publisher;
  String canonicalVolumeLink;
  List<String> authors;
  ImageLinks imageLinks;
  String language;
  String infoLink;
  int ratingsCount;
  String publishedDate;
  String previewLink;
  List<String> categories;
  String description;
  String printType;
  String subtitle;
  String title;
  int pageCount;
  String mainCategory;
  double averageRating;

  VolumeInfo();

  factory VolumeInfo.fromJson(Map map) {
    return json.unmarshal<VolumeInfo>(map);
  }

  Map<String, dynamic> toJson() {
    return json.marshal(this) as Map<String, dynamic>;
  }
}
